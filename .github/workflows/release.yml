name: Release

on:
  push:
    branches:
      - main
      - 'release/**'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repo'
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8.10.2

      - name: 'Setup Node runtime'
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 8.10.2
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 'Install dependencies'
        run: pnpm install --no-frozen-lockfile

      - name: 'Check eslint & test'
        if: github.event_name == 'pull_request'
        run: |
          pnpm run lint
          pnpm run build
          pnpm run test

      - name: Create Release Pull Request
        if: github.event_name == 'push'
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Tag
        if: github.event_name == 'push' && steps.changesets.outputs.published == 'true'
        run: pnpm run release:tag
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
